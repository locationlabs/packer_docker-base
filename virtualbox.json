{
  "builders": [
    {
      "boot_command": [
        "<esc><wait>",
        "<esc><wait>",
        "<enter><wait>",
        "/install/vmlinuz<wait>",
        " auto<wait>",
        " console-setup/ask_detect=false<wait>",
        " console-setup/layoutcode=us<wait>",
        " console-setup/modelcode=pc105<wait>",
        " debconf/frontend=noninteractive<wait>",
        " debian-installer=en_US<wait>",
        " fb=false<wait>",
        " initrd=/install/initrd.gz<wait>",
        " kbd-chooser/method=us<wait>",
        " keyboard-configuration/layout=USA<wait>",
        " keyboard-configuration/variant=USA<wait>",
        " locale=en_US<wait>",
        " netcfg/get_domain=vm<wait>",
        " netcfg/get_hostname=vagrant<wait>",
        " noapic<wait>",
        " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/{{user `preseed_path`}}<wait>",
        " -- <wait>",
        "<enter><wait>"
      ],
      "boot_wait": "10s",
      "disk_size": 40960,
      "guest_additions_path": "VBoxGuestAdditions_{{.Version}}.iso",
      "guest_os_type": "Ubuntu_64",
      "hard_drive_interface": "sata",
      "headless": "{{ user `headless` }}",
      "http_directory": "bento/http",
      "iso_checksum": "{{user `iso_checksum`}}",
      "iso_checksum_type": "{{user `iso_checksum_type`}}",
      "iso_url": "{{user `mirror`}}/{{user `mirror_directory`}}/{{user `iso_name`}}",
      "output_directory": "packer-{{user `template`}}-virtualbox",
      "shutdown_command": "echo 'vagrant' | sudo -S shutdown -P now",
      "ssh_password": "vagrant",
      "ssh_port": 22,
      "ssh_username": "vagrant",
      "ssh_wait_timeout": "10000s",
      "type": "virtualbox-iso",
      "vboxmanage": [
        [
          "modifyvm",
          "{{.Name}}",
          "--memory",
          "384"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--cpus",
          "1"
        ]
      ],
      "virtualbox_version_file": ".vbox_version",
      "vm_name": "{{ user `template` }}"
    }
  ],
  "post-processors": [
    [
      {
        "type": "vagrant",
        "output": "builds/{{user `box_basename`}}.{{.Provider}}.box",
        "keep_input_artifact": false
      },
      {
        "type": "atlas",
        "artifact": "llabs/docker-base",
        "artifact_type": "vagrant.box",
        "metadata": {
          "provider": "virtualbox",
          "version": "{{user `version`}}",
          "created_at": "{{timestamp}}"
        }
      }
    ]
  ],
  "provisioners": [
    {
      "destination": "/tmp/bento-metadata.json",
      "source": "{{user `metadata`}}",
      "type": "file"
    },
    {
      "environment_vars": [
        "HOME_DIR=/home/vagrant",
        "http_proxy={{user `http_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "no_proxy={{user `no_proxy`}}"
      ],
      "execute_command": "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'",
      "scripts": [
        "bento/scripts/common/metadata.sh",
        "bento/scripts/ubuntu/update.sh",
        "bento/scripts/common/sshd.sh",
        "bento/scripts/ubuntu/networking.sh",
        "bento/scripts/ubuntu/sudoers.sh",
        "bento/scripts/ubuntu/vagrant.sh",
        "bento/scripts/common/vmtools.sh",
        "bento/scripts/ubuntu/cleanup.sh",
        "bento/scripts/common/minimize.sh",
        "scripts/update_apt.sh",
        "scripts/install_python.sh",
        "scripts/install_ansible.sh"
      ],
      "type": "shell"
    },
    {
      "type": "shell",
      "execute_command": "{{ .Vars }} sudo -E /bin/bash '{{ .Path }}'",
      "scripts": [
        "scripts/update_apt.sh",
        "scripts/install_python.sh",
        "scripts/install_ansible.sh"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "mkdir -p {{user `ansible_staging_dir`}}"
      ]
    },
    {
      "type": "file",
      "source": "ansible/requirements.yml",
      "destination": "{{user `ansible_staging_dir`}}/requirements.yml"
    },
    {
      "type": "shell",
      "inline": [
        "cd {{user `ansible_staging_dir`}}",
        "ansible-galaxy install -r requirements.yml -p shared-roles --force"
      ]
    },
    {
      "type": "ansible-local",
      "playbook_file": "ansible/packer.yml",
      "extra_arguments": [
        "--tags base,docker,docker-base"
      ],
      "playbook_dir": "ansible",
      "staging_directory": "{{user `ansible_staging_dir`}}"
    }
  ],
  "variables": {
    "box_basename": "ubuntu-14.04",
    "headless": "",
    "http_proxy": "{{env `http_proxy`}}",
    "https_proxy": "{{env `https_proxy`}}",
    "iso_checksum": "a3b345908a826e262f4ea1afeb357fd09ec0558cf34e6c9112cead4bb55ccdfb",
    "iso_checksum_type": "sha256",
    "iso_name": "ubuntu-14.04.3-server-amd64.iso",
    "metadata": "bento/floppy/dummy_metadata.json",
    "mirror": "http://releases.ubuntu.com",
    "mirror_directory": "14.04.3",
    "name": "ubuntu-14.04",
    "no_proxy": "{{env `no_proxy`}}",
    "preseed_path": "ubuntu-14.04/preseed.cfg",
    "template": "ubuntu-14.04-amd64",
    "version": "{{env `ATLAS_APPLICATION_GITHUB_TAG`}}",
    "ansible_staging_dir": "/tmp/ansible-staging.{{timestamp}}"
  }
}
